{"ast":null,"code":"import axios from 'axios';\nconst GITHUB_API_URL = 'https://api.github.com';\nexport const getUserProfile = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\nexport const getUserRepositories = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user repositories:', error);\n    throw error;\n  }\n};\nexport const getUserFollowers = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user followers:', error);\n    throw error;\n  }\n};\nexport const getUserFollowing = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user following:', error);\n    throw error;\n  }\n};\nexport const getUserContributions = async username => {\n  try {\n    const reposResponse = await getUserRepositories(username);\n    const contributions = await Promise.all(reposResponse.map(async repo => {\n      const commitsResponse = await axios.get(`${GITHUB_API_URL}/repos/${username}/${repo.name}/commits?author=${username}`);\n      return commitsResponse.data.map(commit => ({\n        repo: repo.name,\n        commit: commit.commit.message,\n        date: commit.commit.author.date\n      }));\n    }));\n    return contributions.flat();\n  } catch (error) {\n    console.error('Error fetching user contributions:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","GITHUB_API_URL","getUserProfile","username","response","get","data","error","console","getUserRepositories","getUserFollowers","getUserFollowing","getUserContributions","reposResponse","contributions","Promise","all","map","repo","commitsResponse","name","commit","message","date","author","flat"],"sources":["D:/Coding/tracking open source contributions/open-source-contribution-tracker/client/src/services/githubService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\n\r\nexport const getUserProfile = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserRepositories = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user repositories:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowers = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user followers:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowing = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user following:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserContributions = async (username) => {\r\n  try {\r\n    const reposResponse = await getUserRepositories(username);\r\n    const contributions = await Promise.all(\r\n      reposResponse.map(async (repo) => {\r\n        const commitsResponse = await axios.get(\r\n          `${GITHUB_API_URL}/repos/${username}/${repo.name}/commits?author=${username}`\r\n        );\r\n        return commitsResponse.data.map(commit => ({\r\n          repo: repo.name,\r\n          commit: commit.commit.message,\r\n          date: commit.commit.author.date,\r\n        }));\r\n      })\r\n    );\r\n\r\n    return contributions.flat();\r\n  } catch (error) {\r\n    console.error('Error fetching user contributions:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,wBAAwB;AAE/C,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,EAAE,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAG,MAAON,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,QAAQ,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAOP,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,YAAY,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,MAAOR,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,YAAY,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,oBAAoB,GAAG,MAAOT,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMU,aAAa,GAAG,MAAMJ,mBAAmB,CAACN,QAAQ,CAAC;IACzD,MAAMW,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCH,aAAa,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK;MAChC,MAAMC,eAAe,GAAG,MAAMnB,KAAK,CAACK,GAAG,CACrC,GAAGJ,cAAc,UAAUE,QAAQ,IAAIe,IAAI,CAACE,IAAI,mBAAmBjB,QAAQ,EAC7E,CAAC;MACD,OAAOgB,eAAe,CAACb,IAAI,CAACW,GAAG,CAACI,MAAM,KAAK;QACzCH,IAAI,EAAEA,IAAI,CAACE,IAAI;QACfC,MAAM,EAAEA,MAAM,CAACA,MAAM,CAACC,OAAO;QAC7BC,IAAI,EAAEF,MAAM,CAACA,MAAM,CAACG,MAAM,CAACD;MAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CACH,CAAC;IAED,OAAOT,aAAa,CAACW,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}