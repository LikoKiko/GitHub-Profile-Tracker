{"ast":null,"code":"import axios from 'axios';\nconst GITHUB_API_URL = 'https://api.github.com';\nexport const getUserProfile = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\nexport const getUserRepositories = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user repositories:', error);\n    throw error;\n  }\n};\nexport const getUserFollowers = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user followers:', error);\n    throw error;\n  }\n};\nexport const getUserFollowing = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user following:', error);\n    throw error;\n  }\n};\nexport const getUserCommits = async (username, repo, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/repos/${username}/${repo}/commits?author=${username}`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data.map(commit => ({\n      repo,\n      commit: commit.commit.message,\n      date: commit.commit.author.date\n    }));\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.warn(`Conflict error for repository ${repo}`);\n      return []; // Return an empty array if there's a conflict\n    }\n    throw error;\n  }\n};\nexport const getUserContributions = async (username, page = 1) => {\n  try {\n    const reposResponse = await getUserRepositories(username);\n    const contributions = await Promise.all(reposResponse.map(async repo => {\n      return await getUserCommits(username, repo.name, page);\n    }));\n    return contributions.flat();\n  } catch (error) {\n    console.error('Error fetching user contributions:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","GITHUB_API_URL","getUserProfile","username","response","get","data","error","console","getUserRepositories","page","params","per_page","getUserFollowers","getUserFollowing","getUserCommits","repo","map","commit","message","date","author","status","warn","getUserContributions","reposResponse","contributions","Promise","all","name","flat"],"sources":["D:/Coding/tracking open source contributions/open-source-contribution-tracker/client/src/services/githubService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\n\r\nexport const getUserProfile = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserRepositories = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user repositories:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowers = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user followers:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowing = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user following:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserCommits = async (username, repo, page = 1) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${GITHUB_API_URL}/repos/${username}/${repo}/commits?author=${username}`,\r\n      { params: { page, per_page: 10 } }\r\n    );\r\n    return response.data.map(commit => ({\r\n      repo,\r\n      commit: commit.commit.message,\r\n      date: commit.commit.author.date,\r\n    }));\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 409) {\r\n      console.warn(`Conflict error for repository ${repo}`);\r\n      return []; // Return an empty array if there's a conflict\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserContributions = async (username, page = 1) => {\r\n  try {\r\n    const reposResponse = await getUserRepositories(username);\r\n    const contributions = await Promise.all(\r\n      reposResponse.map(async (repo) => {\r\n        return await getUserCommits(username, repo.name, page);\r\n      })\r\n    );\r\n\r\n    return contributions.flat();\r\n  } catch (error) {\r\n    console.error('Error fetching user contributions:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}