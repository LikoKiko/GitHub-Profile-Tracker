{"ast":null,"code":"import axios from 'axios';\nconst GITHUB_API_URL = 'https://api.github.com';\nexport const getUserProfile = async username => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\nexport const getUserRepositories = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user repositories:', error);\n    throw error;\n  }\n};\nexport const getUserFollowers = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user followers:', error);\n    throw error;\n  }\n};\nexport const getUserFollowing = async (username, page = 1) => {\n  try {\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`, {\n      params: {\n        page,\n        per_page: 10\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user following:', error);\n    throw error;\n  }\n};\nexport const getUserContributions = async username => {\n  try {\n    const reposResponse = await getUserRepositories(username);\n    const contributions = await Promise.all(reposResponse.map(async repo => {\n      try {\n        const commitsResponse = await axios.get(`${GITHUB_API_URL}/repos/${username}/${repo.name}/commits?author=${username}`);\n        return commitsResponse.data.map(commit => ({\n          repo: repo.name,\n          commit: commit.commit.message,\n          date: commit.commit.author.date\n        }));\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          console.warn(`Conflict error for repository ${repo.name}`);\n          return []; // Return an empty array if there's a conflict\n        }\n        throw error;\n      }\n    }));\n    return contributions.flat();\n  } catch (error) {\n    console.error('Error fetching user contributions:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","GITHUB_API_URL","getUserProfile","username","response","get","data","error","console","getUserRepositories","page","params","per_page","getUserFollowers","getUserFollowing","getUserContributions","reposResponse","contributions","Promise","all","map","repo","commitsResponse","name","commit","message","date","author","status","warn","flat"],"sources":["D:/Coding/tracking open source contributions/open-source-contribution-tracker/client/src/services/githubService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\n\r\nexport const getUserProfile = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserRepositories = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/repos`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user repositories:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowers = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/followers`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user followers:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserFollowing = async (username, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${username}/following`, {\r\n      params: { page, per_page: 10 }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching user following:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserContributions = async (username) => {\r\n  try {\r\n    const reposResponse = await getUserRepositories(username);\r\n    const contributions = await Promise.all(\r\n      reposResponse.map(async (repo) => {\r\n        try {\r\n          const commitsResponse = await axios.get(\r\n            `${GITHUB_API_URL}/repos/${username}/${repo.name}/commits?author=${username}`\r\n          );\r\n          return commitsResponse.data.map(commit => ({\r\n            repo: repo.name,\r\n            commit: commit.commit.message,\r\n            date: commit.commit.author.date,\r\n          }));\r\n        } catch (error) {\r\n          if (error.response && error.response.status === 409) {\r\n            console.warn(`Conflict error for repository ${repo.name}`);\r\n            return []; // Return an empty array if there's a conflict\r\n          }\r\n          throw error;\r\n        }\r\n      })\r\n    );\r\n\r\n    return contributions.flat();\r\n  } catch (error) {\r\n    console.error('Error fetching user contributions:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,wBAAwB;AAE/C,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,EAAE,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAG,MAAAA,CAAON,QAAQ,EAAEO,IAAI,GAAG,CAAC,KAAK;EAC/D,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,QAAQ,EAAE;MAC5EQ,MAAM,EAAE;QAAED,IAAI;QAAEE,QAAQ,EAAE;MAAG;IAC/B,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,MAAAA,CAAOV,QAAQ,EAAEO,IAAI,GAAG,CAAC,KAAK;EAC5D,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,YAAY,EAAE;MAChFQ,MAAM,EAAE;QAAED,IAAI;QAAEE,QAAQ,EAAE;MAAG;IAC/B,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAOX,QAAQ,EAAEO,IAAI,GAAG,CAAC,KAAK;EAC5D,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,cAAc,UAAUE,QAAQ,YAAY,EAAE;MAChFQ,MAAM,EAAE;QAAED,IAAI;QAAEE,QAAQ,EAAE;MAAG;IAC/B,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,oBAAoB,GAAG,MAAOZ,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMa,aAAa,GAAG,MAAMP,mBAAmB,CAACN,QAAQ,CAAC;IACzD,MAAMc,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCH,aAAa,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK;MAChC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMtB,KAAK,CAACK,GAAG,CACrC,GAAGJ,cAAc,UAAUE,QAAQ,IAAIkB,IAAI,CAACE,IAAI,mBAAmBpB,QAAQ,EAC7E,CAAC;QACD,OAAOmB,eAAe,CAAChB,IAAI,CAACc,GAAG,CAACI,MAAM,KAAK;UACzCH,IAAI,EAAEA,IAAI,CAACE,IAAI;UACfC,MAAM,EAAEA,MAAM,CAACA,MAAM,CAACC,OAAO;UAC7BC,IAAI,EAAEF,MAAM,CAACA,MAAM,CAACG,MAAM,CAACD;QAC7B,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACd,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACwB,MAAM,KAAK,GAAG,EAAE;UACnDpB,OAAO,CAACqB,IAAI,CAAC,iCAAiCR,IAAI,CAACE,IAAI,EAAE,CAAC;UAC1D,OAAO,EAAE,CAAC,CAAC;QACb;QACA,MAAMhB,KAAK;MACb;IACF,CAAC,CACH,CAAC;IAED,OAAOU,aAAa,CAACa,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOvB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}